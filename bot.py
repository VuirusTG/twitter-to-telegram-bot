import os
import asyncio
import logging
import tweepy
from aiogram import Bot
from aiogram.enums import ParseMode
from aiogram.types import InputMediaPhoto
from aiogram.client.default import DefaultBotProperties
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env
load_dotenv()

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
TELEGRAM_USER_ID = int(os.getenv("TELEGRAM_USER_ID"))
TWITTER_BEARER = os.getenv("TWITTER_BEARER")
TWITTER_USERS = os.getenv("TWITTER_USERS").split(",")

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram-–±–æ—Ç–∞
bot = Bot(
    token=TELEGRAM_BOT_TOKEN,
    default=DefaultBotProperties(parse_mode=ParseMode.HTML)
)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

# Tweepy –∫–ª–∏–µ–Ω—Ç
twitter_client = tweepy.Client(bearer_token=TWITTER_BEARER)

# –ü–æ—Å–ª–µ–¥–Ω–∏–µ ID —Ç–≤–∏—Ç–æ–≤, —á—Ç–æ–±—ã –Ω–µ –¥—É–±–ª–∏—Ä–æ–≤–∞—Ç—å
last_tweet_ids = {}

async def notify_user_about_tweet(tweet, media=[]):
    text = tweet.text
    tweet_url = f"https://twitter.com/i/web/status/{tweet.id}"
    caption = f"<b>–ù–æ–≤—ã–π —Ç–≤–∏—Ç –æ—Ç @{tweet.author_id}</b>\n\n{text}\n\n<a href=\"{tweet_url}\">–û—Ç–∫—Ä—ã—Ç—å –≤ Twitter</a>"

    try:
        if media:
            media_group = []
            for i, item in enumerate(media):
                input_media = InputMediaPhoto(media=item["url"])
                if i == 0:
                    input_media.caption = caption
                    input_media.parse_mode = ParseMode.HTML
                media_group.append(input_media)
            await bot.send_media_group(TELEGRAM_USER_ID, media_group)
        else:
            await bot.send_message(TELEGRAM_USER_ID, caption)
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

async def check_twitter_once():
    for username in TWITTER_USERS:
        try:
            user = twitter_client.get_user(username=username.strip())
            user_id = user.data.id

            tweets = twitter_client.get_users_tweets(
                id=user_id,
                max_results=5,
                expansions="attachments.media_keys,author_id",
                media_fields="url,type"
            )

            if tweets.data:
                includes = tweets.includes if tweets.includes else {}
                media_items = includes.get("media", [])

                for tweet in reversed(tweets.data):
                    if last_tweet_ids.get(username) == tweet.id:
                        continue
                    last_tweet_ids[username] = tweet.id

                    photos = []
                    if hasattr(tweet, "attachments") and "media_keys" in tweet.attachments:
                        media_keys = tweet.attachments["media_keys"]
                        for m in media_items:
                            if m.media_key in media_keys and m.type == "photo":
                                photos.append({"url": m.url})

                    await notify_user_about_tweet(tweet, photos)

        except tweepy.TooManyRequests:
            msg = f"‚ö†Ô∏è –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç API –¥–ª—è @{username.strip()}. –ü–∞—É–∑–∞ 1 —á–∞—Å."
            logging.error(msg)
            await bot.send_message(TELEGRAM_USER_ID, msg)
            await asyncio.sleep(3600)
        except Exception as e:
            msg = f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ @{username.strip()}:\n{e}"
            logging.error(msg)
            await bot.send_message(TELEGRAM_USER_ID, msg)

async def run_forever():
    while True:
        try:
            await check_twitter_once()
        except asyncio.CancelledError:
            raise
        except Exception as e:
            logging.exception("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ü–∏–∫–ª–µ.")
            await bot.send_message(TELEGRAM_USER_ID, f"üî• –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:\n{e}")
        await asyncio.sleep(20 * 60)  # 20 –º–∏–Ω—É—Ç

async def on_startup():
    accounts = "\n".join(f"üîπ {u.strip()}" for u in TWITTER_USERS if u.strip())
    text = f"‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –∞–∫–∫–∞—É–Ω—Ç—ã:\n\n{accounts}"
    await bot.send_message(chat_id=TELEGRAM_USER_ID, text=text)

async def main():
    await on_startup()
    await run_forever()

if __name__ == "__main__":
    asyncio.run(main())
